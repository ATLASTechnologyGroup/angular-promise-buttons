angular.module("angularPromiseButtons",[]),angular.module("angularPromiseButtons").run(["$templateCache",function(a){"use strict";a.put("promise-btn-d.html","<button ng-transclude></button>")}]),angular.module("angularPromiseButtons").directive("promiseBtn",["angularPromiseButtons",function(a){"use strict";return{restrict:"EA",transclude:!0,replace:!0,scope:{promiseBtn:"=",promiseBtnOptions:"=?"},templateUrl:"promise-btn-d.html",link:function(b,c){var d=a.config,e=d,f=function(){e.btnLoadingClass&&!e.addClassToCurrentBtnOnly&&c.addClass(e.btnLoadingClass),e.disableBtn&&!e.disableCurrentBtnOnly&&c.attr("disabled","disabled")},g=function(){e.btnLoadingClass&&c.removeClass(e.btnLoadingClass),e.disableBtn&&c.removeAttr("disabled")};c.append(e.spinnerTpl),e.addClassToCurrentBtnOnly&&c.on("click",function(){c.addClass(e.btnLoadingClass)}),e.disableCurrentBtnOnly&&c.on("click",function(){c.attr("disabled","disabled")}),b.$watch("promiseBtnOptions",function(a){angular.isObject(a)&&(e=angular.extend({},d,a))},!0),b.$watch(function(){return b.promiseBtn},function(a){a&&a.then&&(f(),a["finally"](g))})}}}]),angular.module("angularPromiseButtons").provider("angularPromiseButtons",function(){"use strict";var a={spinnerTpl:'<span class="btn-spinner"></span>',disableBtn:!0,btnLoadingClass:"is-loading",addClassToCurrentBtnOnly:!1,disableCurrentBtnOnly:!1};return{extendConfig:function(b){a=angular.extend(a,b)},$get:function(){return{config:a}}}});