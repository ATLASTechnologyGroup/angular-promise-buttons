angular.module("angularPromiseButtons",[]),angular.module("angularPromiseButtons").run(["$templateCache",function(a){"use strict";a.put("promise-btn-d.html","<button ng-transclude></button>")}]),angular.module("angularPromiseButtons").directive("promiseBtn",["angularPromiseButtons",function(a){"use strict";return{restrict:"EA",transclude:!0,replace:!0,scope:{promiseBtn:"="},templateUrl:"promise-btn-d.html",link:function(b,c){var d=a.config,e=function(){d.btnLoadingClass&&!d.addClassToCurrentBtnOnly&&c.addClass(d.btnLoadingClass),d.disableBtn&&!d.disableCurrentBtnOnly&&c.attr("disabled","disabled")},f=function(){d.btnLoadingClass&&c.removeClass(d.btnLoadingClass),d.disableBtn&&c.removeAttr("disabled")};c.append(d.spinnerTpl),d.addClassToCurrentBtnOnly&&c.on("click",function(){c.addClass(d.btnLoadingClass)}),d.disableCurrentBtnOnly&&c.on("click",function(){c.attr("disabled","disabled")}),b.$watch(function(){return b.promiseBtn},function(a){a&&a.then&&(e(),a["finally"](f))})}}}]),angular.module("angularPromiseButtons").provider("angularPromiseButtons",function(){"use strict";var a={spinnerTpl:'<span class="btn-spinner"></span>',disableBtn:!0,btnLoadingClass:"is-loading",addClassToCurrentBtnOnly:!1,disableCurrentBtnOnly:!1};return{extendConfig:function(b){a=angular.extend(a,b)},$get:function(){return{config:a}}}});